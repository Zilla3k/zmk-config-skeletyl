#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <4 4>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            layers = <0 1 2>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <0 10 20>;
            layers = <0 1 2>;
        };

        back {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
            layers = <0 2 1>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <9 19>;
            layers = <0 2 1>;
        };

        qwerty {
            bindings = <&to 0>;
            key-positions = <11 12 13>;
            layers = <0 1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp Q             &kp W  &kp E           &kp R           &kp T        &kp Y      &kp U            &kp I                                       &kp O              &kp P
&kp A             &kp S  &hm LEFT_ALT D  &hm LEFT_GUI F  &kp G        &kp H      &hm RIGHT_GUI J  &hm RIGHT_ALT K                             &hm RIGHT_SHIFT L  &hm SINGLE_QUOTE SEMICOLON
&hm LEFT_SHIFT Z  &kp X  &kp C           &kp V           &kp B        &kp N      &kp M            &kp COMMA                                   &kp PERIOD         &hm RCTRL SLASH
                         &lt 1 TAB       &kp LCTRL       &kp SPACE    &kp ENTER  &lt 2 BACKSPACE  &hm LG(LC(LEFT_ARROW)) LG(LC(RIGHT_ARROW))
            >;

            label = "QWERTY";
        };

        LOWER {
            bindings = <
&kp N1          &kp N2       &kp N3    &kp N4          &kp N5             &kp N6            &kp N7             &kp N8            &kp N9                &kp N0
&hm GRAVE EXCL  &kp AT_SIGN  &kp HASH  &kp DOLLAR      &kp PERCENT        &kp CARET         &kp AMPERSAND      &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp EQUAL       &kp MINUS    &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SINGLE_QUOTE  &kp SEMICOLON         &kp NON_US_BACKSLASH
                             &trans    &trans          &trans             &trans            &trans             &trans
            >;

            label = "LOWER";
        };

        ADJUST {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4     &kp F5       &trans          &trans          &kp UP_ARROW      &trans           &trans
&kp F6   &kp F7   &kp F8  &kp F9     &kp F10      &bt BT_NXT      &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW  &trans
&kp F11  &kp F12  &trans  &kp PG_DN  &kp PG_UP    &bt BT_CLR_ALL  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT       &trans
                  &trans  &trans     &trans       &trans          &trans          &trans
            >;

            label = "ADJUST";
        };
    };
};
